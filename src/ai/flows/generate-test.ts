// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview Test generation flow for creating tests based on unit and topic.
 *
 * - generateTest - A function that generates a test based on user-selected curriculum.
 * - GenerateTestInput - The input type for the generateTest function.
 * - GenerateTestOutput - The return type for the generateTest function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateTestInputSchema = z.object({
  unit: z.string().describe('The unit for which to generate the test.'),
  topic: z.string().describe('The topic for which to generate the test.'),
  gradeLevel: z.number().describe('The grade level of the test.'),
  subject: z.string().describe('The subject of the test.'),
  instructions: z.string().optional().describe('Additional instructions for generating the test.'),
});
export type GenerateTestInput = z.infer<typeof GenerateTestInputSchema>;

const GenerateTestOutputSchema = z.object({
  test: z.string().describe('The generated test content.'),
});
export type GenerateTestOutput = z.infer<typeof GenerateTestOutputSchema>;

export async function generateTest(input: GenerateTestInput): Promise<GenerateTestOutput> {
  return generateTestFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateTestPrompt',
  input: {schema: GenerateTestInputSchema},
  output: {schema: GenerateTestOutputSchema},
  prompt: `You are an expert educator specializing in creating tests for students.

You will use the unit, topic, grade level and subject information to create a comprehensive test.
The test should assess student understanding of the material and align with educational standards.

Unit: {{{unit}}}
Topic: {{{topic}}}
Grade Level: {{{gradeLevel}}}
Subject: {{{subject}}}

{{#if instructions}}
Additional Instructions: {{{instructions}}}
{{/if}}

Please generate the test.
`, 
});

const generateTestFlow = ai.defineFlow(
  {
    name: 'generateTestFlow',
    inputSchema: GenerateTestInputSchema,
    outputSchema: GenerateTestOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
